{"version":3,"sources":["accordeon.js","dinam-adap.js","donate.js","main-slider.js","nav.js","player_NEW.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACllLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.min.js","sourcesContent":["// accordeon\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  const accordeons = document.querySelectorAll(\".accordeon__item\");\r\n  const accordeonBtn = document.querySelectorAll(\".accordeon__title\");\r\n  const navLink = document.querySelectorAll(\".menu__item\");\r\n  const pathname = window.location.pathname; // возвращает путь до текущей страницы\r\n  const href = window.location.href; // возвращает полный адрес страницы\r\n  const hrefLink = localStorage.getItem(\"hrefLink\"); // записываем хеш в localStorage\r\n\r\n  // переключение табов\r\n  accordeonBtn.forEach((el) => {\r\n    el.addEventListener(\"click\", (e) => {\r\n      // console.log(el);\r\n      const self = e.currentTarget;\r\n      // el.classList.remove(\"active\");\r\n      // const title = self.querySelector(\".accordeon__name\");\r\n      // const content = self.querySelector(\".accordeon__decription\");\r\n\r\n      for (let i = 0, parent; (parent = accordeons[i]); i++) {\r\n        // console.log(parent);\r\n        parent.classList.remove(\"active\");\r\n        parent.onclick = function (e) {\r\n            // console.log(e);\r\n          // console.log(e.target.className + \"--\");\r\n          if ((e.target.className == \"accordeon__title\") || (e.target.className == \"btn\") || (e.target.className == \"accordeon__head\")) {\r\n            this.classList.toggle(\"active\");\r\n          //   // alert(this.className);\r\n            if (this.classList.contains('active')) {\r\n              // секция всегда начинается с верха экрана\r\n              this.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n            }\r\n          }\r\n        };\r\n      }\r\n\r\n      // .self.classList.toggle(\"active\");\r\n    });\r\n  });\r\n  // END переключение табов\r\n\r\n  // закрытие мобильного меню\r\n  navLink.forEach((item) => {\r\n    item.addEventListener(\"click\", () => {\r\n      // let url = item.baseURI;\r\n      let hash = item.childNodes[1].innerText;\r\n      // console.log(hash);\r\n      // console.log(hash.toLowerCase());\r\n\r\n      accordeons.forEach((el) => {\r\n        el.classList.remove(\"active\"); // получают элементы меню\r\n        const isCob = el.classList.contains(hash.toLowerCase());\r\n\r\n        if (pathname != '/index.html') {\r\n          localStorage.setItem(\"hrefLink\", hash.toLowerCase());\r\n          // alert(ркуа);\r\n        } else {\r\n          while (isCob) {\r\n            el.classList.add(\"active\");\r\n            break;\r\n          }\r\n          localStorage.removeItem('hrefLink');\r\n        }\r\n      });\r\n    });\r\n  });\r\n  // END закрытие мобильного меню\r\n\r\n  // проверка если мы перешли с другой страницы с хешем и открываем нужную секцию\r\n  if (href.includes('#')) { // если мы на главной с хешем\r\n      for (let i = 0, parent; (parent = accordeons[i]); i++) {\r\n        parent.classList.remove(\"active\");\r\n        if (parent.classList.contains(hrefLink)) {\r\n          parent.classList.add('active');\r\n        }\r\n      }\r\n  } else {\r\n    localStorage.removeItem('hrefLink');\r\n  }\r\n  // END проверки на хэш\r\n\r\n});\r\n// ----- END\r\n","// Dynamic Adapt v.1\r\n// HTML data-da=\"where(uniq class name),when(breakpoint),position(digi)\"\r\n// e.x. data-da=\".item,992,2\"\r\n// Andrikanych Yevhen 2020\r\n// https://www.youtube.com/c/freelancerlifestyle\r\n\r\n\"use strict\";\r\n\r\nfunction DynamicAdapt(type) {\r\n  this.type = type;\r\n}\r\n\r\nDynamicAdapt.prototype.init = function () {\r\n  const _this = this;\r\n  // массив объектов\r\n  this.оbjects = [];\r\n  this.daClassname = \"_dynamic_adapt_\";\r\n  // массив DOM-элементов\r\n  this.nodes = document.querySelectorAll(\"[data-da]\");\r\n\r\n  // наполнение оbjects объктами\r\n  for (let i = 0; i < this.nodes.length; i++) {\r\n    const node = this.nodes[i];\r\n    const data = node.dataset.da.trim();\r\n    const dataArray = data.split(\",\");\r\n    const оbject = {};\r\n    оbject.element = node;\r\n    оbject.parent = node.parentNode;\r\n    оbject.destination = document.querySelector(dataArray[0].trim());\r\n    оbject.breakpoint = dataArray[1] ? dataArray[1].trim() : \"767\";\r\n    оbject.place = dataArray[2] ? dataArray[2].trim() : \"last\";\r\n    оbject.index = this.indexInParent(оbject.parent, оbject.element);\r\n    this.оbjects.push(оbject);\r\n  }\r\n\r\n  this.arraySort(this.оbjects);\r\n\r\n  // массив уникальных медиа-запросов\r\n  this.mediaQueries = Array.prototype.map.call(\r\n    this.оbjects,\r\n    function (item) {\r\n      return (\r\n        \"(\" +\r\n        this.type +\r\n        \"-width: \" +\r\n        item.breakpoint +\r\n        \"px),\" +\r\n        item.breakpoint\r\n      );\r\n    },\r\n    this\r\n  );\r\n  this.mediaQueries = Array.prototype.filter.call(\r\n    this.mediaQueries,\r\n    function (item, index, self) {\r\n      return Array.prototype.indexOf.call(self, item) === index;\r\n    }\r\n  );\r\n\r\n  // навешивание слушателя на медиа-запрос\r\n  // и вызов обработчика при первом запуске\r\n  for (let i = 0; i < this.mediaQueries.length; i++) {\r\n    const media = this.mediaQueries[i];\r\n    const mediaSplit = String.prototype.split.call(media, \",\");\r\n    const matchMedia = window.matchMedia(mediaSplit[0]);\r\n    const mediaBreakpoint = mediaSplit[1];\r\n\r\n    // массив объектов с подходящим брейкпоинтом\r\n    const оbjectsFilter = Array.prototype.filter.call(\r\n      this.оbjects,\r\n      function (item) {\r\n        return item.breakpoint === mediaBreakpoint;\r\n      }\r\n    );\r\n    matchMedia.addListener(function () {\r\n      _this.mediaHandler(matchMedia, оbjectsFilter);\r\n    });\r\n    this.mediaHandler(matchMedia, оbjectsFilter);\r\n  }\r\n};\r\n\r\nDynamicAdapt.prototype.mediaHandler = function (matchMedia, оbjects) {\r\n  if (matchMedia.matches) {\r\n    for (let i = 0; i < оbjects.length; i++) {\r\n      const оbject = оbjects[i];\r\n      оbject.index = this.indexInParent(оbject.parent, оbject.element);\r\n      this.moveTo(оbject.place, оbject.element, оbject.destination);\r\n    }\r\n  } else {\r\n    for (let i = 0; i < оbjects.length; i++) {\r\n      const оbject = оbjects[i];\r\n      if (оbject.element.classList.contains(this.daClassname)) {\r\n        this.moveBack(оbject.parent, оbject.element, оbject.index);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// Функция перемещения\r\nDynamicAdapt.prototype.moveTo = function (place, element, destination) {\r\n  element.classList.add(this.daClassname);\r\n  if (place === \"last\" || place >= destination.children.length) {\r\n    destination.insertAdjacentElement(\"beforeend\", element);\r\n    return;\r\n  }\r\n  if (place === \"first\") {\r\n    destination.insertAdjacentElement(\"afterbegin\", element);\r\n    return;\r\n  }\r\n  destination.children[place].insertAdjacentElement(\"beforebegin\", element);\r\n};\r\n\r\n// Функция возврата\r\nDynamicAdapt.prototype.moveBack = function (parent, element, index) {\r\n  element.classList.remove(this.daClassname);\r\n  if (parent.children[index] !== undefined) {\r\n    parent.children[index].insertAdjacentElement(\"beforebegin\", element);\r\n  } else {\r\n    parent.insertAdjacentElement(\"beforeend\", element);\r\n  }\r\n};\r\n\r\n// Функция получения индекса внутри родителя\r\nDynamicAdapt.prototype.indexInParent = function (parent, element) {\r\n  const array = Array.prototype.slice.call(parent.children);\r\n  return Array.prototype.indexOf.call(array, element);\r\n};\r\n\r\n// Функция сортировки массива по breakpoint и place\r\n// по возрастанию для this.type = min\r\n// по убыванию для this.type = max\r\nDynamicAdapt.prototype.arraySort = function (arr) {\r\n  if (this.type === \"min\") {\r\n    Array.prototype.sort.call(arr, function (a, b) {\r\n      if (a.breakpoint === b.breakpoint) {\r\n        if (a.place === b.place) {\r\n          return 0;\r\n        }\r\n\r\n        if (a.place === \"first\" || b.place === \"last\") {\r\n          return -1;\r\n        }\r\n\r\n        if (a.place === \"last\" || b.place === \"first\") {\r\n          return 1;\r\n        }\r\n\r\n        return a.place - b.place;\r\n      }\r\n\r\n      return a.breakpoint - b.breakpoint;\r\n    });\r\n  } else {\r\n    Array.prototype.sort.call(arr, function (a, b) {\r\n      if (a.breakpoint === b.breakpoint) {\r\n        if (a.place === b.place) {\r\n          return 0;\r\n        }\r\n\r\n        if (a.place === \"first\" || b.place === \"last\") {\r\n          return 1;\r\n        }\r\n\r\n        if (a.place === \"last\" || b.place === \"first\") {\r\n          return -1;\r\n        }\r\n\r\n        return b.place - a.place;\r\n      }\r\n\r\n      return b.breakpoint - a.breakpoint;\r\n    });\r\n    return;\r\n  }\r\n};\r\n\r\nconst da = new DynamicAdapt(\"max\");\r\nda.init();\r\n","const donateBtn = document.querySelector('.donate__btn');\r\n// const wrapper = document.querySelector('.wrapper');\r\nconst donateSelect = document.querySelector('.donate__btn-select');\r\n// const donateSelect2 = document.querySelector('.donate__btn-select._active');\r\nconst donateCoffee = document.querySelector('.donate__btn-coffee');\r\nconst donatePaypal = document.querySelector('.donate__btn-paypal');\r\n\r\n\r\ndonateBtn.addEventListener(\"click\", (e) => {\r\n  e.preventDefault();\r\n  // document.body.classList.add('_lock');\r\n  // wrapper.classList.add('_active');\r\n  donateSelect.classList.toggle('_active');\r\n});\r\n\r\ndonatePaypal.addEventListener('click', () => {\r\n  // document.body.classList.remove('_lock');\r\n  // wrapper.classList.remove('_active');\r\n  donateSelect.classList.remove('_active');\r\n});\r\n\r\ndonateCoffee.addEventListener('click', () => {\r\n  // document.body.classList.remove('_lock');\r\n  // wrapper.classList.remove('_active');\r\n  donateSelect.classList.remove('_active');\r\n});\r\n\r\ndocument.addEventListener('click', (e) => {\r\n  // console.log(e.target.className);\r\n\r\n  if (e.target.className != \"donate__btn\"){\r\n    // console.log(\"11\");\r\n    // if (!donateSelect2) {\r\n      // document.body.classList.remove('_lock');\r\n      // wrapper.classList.remove('_active');\r\n      donateSelect.classList.remove('_active');\r\n    // }\r\n  }\r\n});\r\n","// слайдер на главной\r\nconst headerSlider = new Swiper(\".header__slider\", {\r\n  // loop: true,\r\n  autoplay: {\r\n    delay: 5000,\r\n  },\r\n  speed: 1200,\r\n  effect: \"fade\",\r\n  fadeEffect: {\r\n    crossFade: true,\r\n  },\r\n  // переключение при клике на слайд\r\n  // slideToClickedSlide: true,\r\n  // отключение прокрутки при наведении мыши\r\n  // on: {\r\n  //   init() {\r\n  //     this.el.addEventListener(\"mouseenter\", () => {\r\n  //       this.autoplay.stop();\r\n  //     });\r\n  //     this.el.addEventListener(\"mouseleave\", () => {\r\n  //       this.autoplay.start();\r\n  //     });\r\n  //   },\r\n  // },\r\n  //\r\n});\r\n//----- END\r\n","// мобильное меню\r\n\r\n//выпадающее меню для мобильных устройств\r\ndocument.addEventListener(\"click\", documentActions);\r\n\r\nfunction documentActions(e) {\r\n  const targetElement = e.target;\r\n  if (window.innerWidth > 900) {\r\n    if (targetElement.classList.contains(\"menu__arrow\")) {\r\n      targetElement.closest(\".menu__item\").classList.toggle(\"_hover\");\r\n    }\r\n    if (\r\n      !targetElement.closest(\".menu__item\") &&\r\n      document.querySelectorAll(\".menu__item._hover\").length > 0\r\n    ) {\r\n      // console.log(\"ehhh\");\r\n      // _removeClasses(document.querySelectorAll(\".menu__item._hover\"), \"_hover\");\r\n    }\r\n  }\r\n}\r\n\r\n// проверка, является ли уствройство мобильным\r\nconst isMobile = {\r\n  Android: function () {\r\n    return navigator.userAgent.match(/Android/i);\r\n  },\r\n  BlackBerry: function () {\r\n    return navigator.userAgent.match(/BlackBerry/i);\r\n  },\r\n  iOS: function () {\r\n    return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n  },\r\n  Opera: function () {\r\n    return navigator.userAgent.match(/Opera Mini/i);\r\n  },\r\n  Windows: function () {\r\n    return navigator.userAgent.match(/IEMobile/i);\r\n  },\r\n  any: function () {\r\n    return (\r\n      isMobile.Android() ||\r\n      isMobile.BlackBerry() ||\r\n      isMobile.iOS() ||\r\n      isMobile.Opera() ||\r\n      isMobile.Windows()\r\n    );\r\n  },\r\n};\r\n\r\nif (isMobile.any()) {\r\n  // document.querySelector('html').classList.add('_touch');\r\n  document.body.classList.add(\"_touch\");\r\n}\r\n\r\n// меню бургер\r\nconst iconMenu = document.querySelector(\".menu__icon\");\r\nconst menuBody = document.querySelector(\".menu__body\");\r\nconst menuLink = document.querySelectorAll(\".menu__item\");\r\nif (iconMenu) {\r\n  iconMenu.addEventListener(\"click\", function (e) {\r\n    document.body.classList.toggle(\"_lock\");\r\n    iconMenu.classList.toggle(\"_active\");\r\n    menuBody.classList.toggle(\"_active\");\r\n  });\r\n}\r\n// закрытие при клике\r\nmenuLink.forEach((item) => {\r\n  item.addEventListener(\"click\", () => {\r\n    document.body.classList.remove(\"_lock\");\r\n    iconMenu.classList.remove(\"_active\");\r\n    menuBody.classList.remove(\"_active\");\r\n  });\r\n});\r\n","document.querySelectorAll(\".player\").forEach((player) => {\r\n  const audio = player.querySelector(\".player__audio\");\r\n  const playBtn = player.querySelector(\".player__play-src\");\r\n  const progressBar = player.querySelector(\".player__progress-bar\");\r\n  const muteBtn = player.querySelector(\".player__sound-muteicon\");\r\n  const volumeSlider = player.querySelector(\".player__sound-volume\");\r\n  const maxVolumeBtn = player.querySelector(\".player__sound-laughticon\");\r\n\r\n  // Play/Pause\r\n  function togglePlayPause() {\r\n    const isPlaying = player.classList.contains(\"play\");\r\n    if (isPlaying) {\r\n      audio.pause();\r\n      player.classList.remove(\"play\");\r\n      playBtn.src = \"./images/icons/sprite.svg#play\";\r\n    } else {\r\n      stopAllPlayers();\r\n      audio.play();\r\n      player.classList.add(\"play\");\r\n      playBtn.src = \"./images/icons/sprite.svg#pause\";\r\n    }\r\n  }\r\n\r\n  // Остановка других плееров\r\n  function stopAllPlayers() {\r\n    document.querySelectorAll(\".player\").forEach((otherPlayer) => {\r\n      if (otherPlayer !== player) {\r\n        otherPlayer.classList.remove(\"play\");\r\n        const otherAudio = otherPlayer.querySelector(\".player__audio\");\r\n        const otherPlayBtn = otherPlayer.querySelector(\".player__play-src\");\r\n        otherAudio.pause();\r\n        otherAudio.currentTime = 0;\r\n        otherPlayBtn.src = \"./images/icons/sprite.svg#play\";\r\n      }\r\n    });\r\n  }\r\n\r\n  // Mute\r\n  function toggleMute() {\r\n    audio.volume = 0;\r\n    volumeSlider.value = 0;\r\n    muteBtn.src = \"./images/icons/sprite.svg#mute-full\";\r\n    maxVolumeBtn.src = \"./images/icons/sprite.svg#laught\";\r\n  }\r\n\r\n  // Max Volume\r\n  function setMaxVolume() {\r\n    audio.volume = 1;\r\n    volumeSlider.value = 100;\r\n    muteBtn.src = \"./images/icons/sprite.svg#mute\";\r\n    maxVolumeBtn.src = \"./images/icons/sprite.svg#laught-full\";\r\n  }\r\n\r\n  // Volume Control\r\n  function updateVolume() {\r\n    audio.volume = volumeSlider.value / 100;\r\n    if (audio.volume === 0) {\r\n      muteBtn.src = \"./images/icons/sprite.svg#mute-full\";\r\n      maxVolumeBtn.src = \"./images/icons/sprite.svg#laught\";\r\n    } else if (audio.volume > 0.75) {\r\n      maxVolumeBtn.src = \"./images/icons/sprite.svg#laught-full\";\r\n    } else {\r\n      muteBtn.src = \"./images/icons/sprite.svg#mute\";\r\n      maxVolumeBtn.src = \"./images/icons/sprite.svg#laught\";\r\n    }\r\n  }\r\n\r\n  // Update Progress Bar\r\n  function updateProgress() {\r\n    if (progressBar) {\r\n      const progressPercent = (audio.currentTime / audio.duration) * 100;\r\n      progressBar.style.width = `${progressPercent}%`;\r\n    }\r\n  }\r\n\r\n  // Event listeners\r\n  player.querySelector(\".player__play\").addEventListener(\"pointerdown\", togglePlayPause);\r\n  player.querySelector(\".player__sound-mute\").addEventListener(\"pointerdown\", toggleMute);\r\n  player.querySelector(\".player__sound-laught\").addEventListener(\"pointerdown\", setMaxVolume);\r\n  volumeSlider.addEventListener(\"input\", updateVolume);\r\n\r\n  // Update progress bar as audio plays\r\n  audio.addEventListener(\"timeupdate\", updateProgress);\r\n\r\n  // Reset play icon and progress bar when audio ends\r\n  audio.addEventListener(\"ended\", () => {\r\n    playBtn.src = \"./images/icons/sprite.svg#play\";\r\n    player.classList.remove(\"play\");\r\n    if (progressBar) {\r\n      progressBar.style.width = \"0%\";\r\n    }\r\n  });\r\n});\r\n"]}